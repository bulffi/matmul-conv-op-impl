__mlu_entry__ void mlu_matmul_kernel_multi_core(half* input1, half* input2, half* output, int32_t H, int32_t K, int32_t W) {

    // __bang_printf("%d %d\n", taskIdX, taskIdY);
    int x_range = H / 16;
    int y_range = W / 16;
    int x_start = x_range * taskIdX;
    int y_start = y_range * taskIdY;
    int x_end = x_start + x_range;
    int y_end = y_start + y_range;
    
    if (taskIdX == 15) {
        x_end = H;
    }
    if (taskIdY == 15) {
        y_end = W;
    }

    for (int i = x_start; i < x_end; i++) {
        for (int j = y_start; j < y_end; j++) {
            half tempt = 0;
            for (int k = 0; k < K; k++) {
                tempt += input1[i * K + k] * input2[k * W + j];
            }
            output[i * W + j] = tempt;
        }
    }
}
